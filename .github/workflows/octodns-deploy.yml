name: octodns-sync --doit

on:
  # Run when manually triggered
  workflow_dispatch:
    inputs:
      doit:
        description: |
          Really do it? Set "--doit" to do it, or another string
          to not do it.
        required: true
        default: 'No'

permissions:
  actions: read
  checks: write
  contents: read
  deployments: write
  issues: write
  packages: read
  pull-requests: write
  repository-projects: read
  security-events: read
  statuses: write

defaults:
  run:
    shell: bash

env:
  CONFIG_TO_USE: public.yaml

jobs:

  meta:
    name: Parse event data into outputs
    runs-on: ubuntu-20.04
    outputs:
      config: ${{ steps.which-config.outputs.config }}
      doit: ${{ steps.doit.outputs.doit }}
      ref: ${{ steps.get-ref.outputs.ref }}
      sha: ${{ steps.get-sha.outputs.sha }}
    steps:
      - name: Checkout ${{ github.repository }}:${{ github.ref }}
        uses: actions/checkout@v3
      - name: 'which-config: Which config file to run?'
        id: which-config
        run: |
          _config="${{ env.CONFIG_TO_USE }}"
          echo "::set-output name=config::${_config}"
      - name: 'doit: The .doit event input, if present'
        id: doit
        run: |
          if [ "${{ github.event.inputs.doit }}" = "--doit" ]; then
            _doit="--doit"
          elif [ "${{ needs.slashcom.outputs.command }}" = "deploy" ]; then
            _doit="--doit"
          else
            _doit="No"
          fi
          echo "::set-output name=doit::${_doit}"
      - name: 'ref: The Git ref to read config from'
        id: get-ref
        run: |
          case "${{ github.event_name }}" in
            "pull_request_target")
              _ref=refs/pull/${{ github.event.pull_request.number }}/merge ;;
            "issue_comment")
              _ref=refs/pull/${{ github.event.issue.number }}/merge ;;
            *)
              _ref=${{ github.ref }}
          esac
          echo "::set-output name=ref::${_ref}"
      - name: 'sha: A short SHA of the commit to read config from'
        id: get-sha
        run: |
          git fetch origin ${{ steps.get-ref.outputs.ref }}
          _sha=$(cut -c 1-8 .git/FETCH_HEAD)
          echo "::set-output name=sha::${_sha}"

  deploy:
    name: Deploy ${{ needs.meta.outputs.config }}
    needs: [meta]
    environment: prod
    if: ${{ needs.meta.outputs.doit == '--doit' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ${{ github.repository }}:${{ github.ref }}
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - run: pip install -r requirements.txt
      - name: Run `octodns-sync` to deploy ${{ needs.meta.outputs.config }}
        id: octodns-sync
        uses: solvaholic/octodns-sync@v3
        with:
          config_path: ${{ needs.meta.outputs.config }}
          doit: --doit
        env:
          AZURE_APPLICATION_ID: ${{ secrets.azure_application_id }}
          AZURE_AUTHENTICATION_KEY: ${{ secrets.azure_authentication_key }}
          AZURE_DIRECTORY_ID: ${{ secrets.azure_directory_id }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.azure_subscription_id }}
      # name: Test ${{ needs.meta.outputs.config }} deployment
        # TODO: Run octodns-sync to confirm no changes to be made?
